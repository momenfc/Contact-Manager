{"version":3,"sources":["components/Header.js","components/context.js","components/Contact.js","components/usersApi.js","components/InputGroup.js","components/AddContact.js","components/UpdataUser.js","components/About.js","components/NotFound.js","App.js","serviceWorker.js","index.js"],"names":["Header","props","brand","className","to","defaultProps","Context","React","createContext","reducer","state","action","type","users","filter","user","id","payload","map","Provider","dispatch","setState","componentDidMount","a","Axios","get","res","data","value","this","children","Component","Consumer","Contact","showUserInfo","deleteUser","delete","name","email","phone","style","cursor","onClick","bind","Users","Fragment","key","InputGroup","label","placeholder","onChange","error","htmlFor","classnames","AddContact","errors","e","target","onSubmit","preventDefault","newUsers","post","history","push","UpdataUser","match","params","UpdUsers","put","About","NotFound","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.9ccc046c.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Header = (props) => {\r\n  const { brand } = props;\r\n  return (\r\n    <nav className=\"navbar navbar-expand-sm navbar-dark bg-danger mb-3 py-1\">\r\n      <div className=\"container\">\r\n        <Link to=\"/NotFound\" className=\"navbar-brand\">\r\n          {\" \"}\r\n          {brand}{\" \"}\r\n        </Link>\r\n        <ul className=\"navbar-nav\">\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/\" className=\"nav-link\">\r\n              Home\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/user/add\" className=\"nav-link\">\r\n              Add\r\n            </Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link to=\"/about\" className=\"nav-link\">\r\n              About\r\n            </Link>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nHeader.defaultProps = {\r\n  brand: \"Altayer\",\r\n};\r\n\r\nexport default Header;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\n\r\nconst Context = React.createContext();\r\nconst reducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"DELETE_CONTACT\":\r\n      return {\r\n        ...state,\r\n        users: state.users.filter((user) => user.id !== action.payload),\r\n      };\r\n    case \"ADD_USER\":\r\n      return {\r\n        ...state,\r\n        users: [...state.users, action.payload],\r\n      };\r\n    case \"UPDATA-USER\":\r\n      return {\r\n        ...state,\r\n        users: state.users.map((user) =>\r\n          user.id === action.payload.id ? (user = action.payload) : user\r\n        ),\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\nexport class Provider extends Component {\r\n  state = {\r\n    users: [],\r\n    dispatch: (action) => this.setState((state) => reducer(state, action)),\r\n  };\r\n  componentDidMount = async () => {\r\n    const res = await Axios.get(\"https://jsonplaceholder.typicode.com/users\");\r\n    this.setState({ users: res.data });\r\n  };\r\n  render() {\r\n    return (\r\n      <Context.Provider value={this.state}>\r\n        {this.props.children}\r\n      </Context.Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const { Consumer } = Context;\r\n","import React, { Component } from \"react\";\r\nimport { Consumer } from \"./context\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Contact extends Component {\r\n  state = {\r\n    showUserInfo: false,\r\n  };\r\n  deleteUser = async (id, dispatch) => {\r\n    await Axios.delete(`https://jsonplaceholder.typicode.com/users/${id}`);\r\n    dispatch({ type: \"DELETE_CONTACT\", payload: id });\r\n  };\r\n  render() {\r\n    const { id, name, email, phone } = this.props.user;\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card card-body bg-light mb-3\">\r\n              <h4 className=\"card-title\">\r\n                {name}{\" \"}\r\n                <i\r\n                  className=\"fas fa-sort-down text-info\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={() =>\r\n                    this.setState({ showUserInfo: !this.state.showUserInfo })\r\n                  }\r\n                />\r\n                <i\r\n                  className=\"fas fa-user-times float-right text-danger\"\r\n                  style={{ cursor: \"pointer\" }}\r\n                  onClick={this.deleteUser.bind(this, id, dispatch)}\r\n                />\r\n                <Link to={`/user/edit/${id}`}>\r\n                  <i\r\n                    className=\"fas fa-user-edit float-right text-warning mr-3\"\r\n                    style={{ cursor: \"pointer\" }}\r\n                  />\r\n                </Link>\r\n              </h4>\r\n              {this.state.showUserInfo ? (\r\n                <ul className=\"list-group mb-3\">\r\n                  <li className=\"list-group-item py-2 my-2 lead\">\r\n                    Email: {email}\r\n                  </li>\r\n                  <li className=\"list-group-item py-2 my-2 lead\">\r\n                    Phone: {phone}\r\n                  </li>\r\n                </ul>\r\n              ) : null}\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from \"react\";\r\nimport Contact from \"./Contact\";\r\nimport { Consumer } from \"./context\";\r\n\r\nclass Users extends Component {\r\n  render() {\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { users } = value;\r\n          return (\r\n            <React.Fragment>\r\n              {users.map((user) => (\r\n                <Contact key={user.id} user={user} />\r\n              ))}\r\n            </React.Fragment>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classnames from \"classnames\";\r\n\r\nfunction InputGroup({\r\n  label,\r\n  name,\r\n  id,\r\n  type,\r\n  placeholder,\r\n  value,\r\n  onChange,\r\n  error,\r\n}) {\r\n  return (\r\n    <div className=\"form-group\">\r\n      <label htmlFor={name}>{label}</label>\r\n      <input\r\n        label={label}\r\n        type={type}\r\n        name={name}\r\n        id={id}\r\n        className={classnames(\"form-control form-control-lg\", {\r\n          \"is-invalid\": error,\r\n        })}\r\n        placeholder={placeholder}\r\n        value={value}\r\n        onChange={onChange}\r\n        error={error}\r\n      />\r\n      {error && <div className=\"invalid-feedback\">{error}</div>}\r\n    </div>\r\n  );\r\n}\r\nInputGroup.defaultProps = {\r\n  type: \"text\",\r\n};\r\nInputGroup.propTypes = {\r\n  label: PropTypes.string.isRequired,\r\n  name: PropTypes.string.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  placeholder: PropTypes.string.isRequired,\r\n  value: PropTypes.string.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\nexport default InputGroup;\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Consumer } from \"../components/context\";\r\nimport InputGroup from \"./InputGroup\";\r\n\r\nexport default class AddContact extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // chack fields\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name Is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email Is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone Is Required\" } });\r\n      return;\r\n    }\r\n    const newUsers = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const res = await Axios.post(\r\n      \"https://jsonplaceholder.typicode.com/users\",\r\n      newUsers\r\n    );\r\n\r\n    dispatch({ type: \"ADD_USER\", payload: res.data });\r\n    // clear fields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <h2 className=\"card-header text-center\">\r\n                Add <span className=\"text-danger\">User</span>\r\n              </h2>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <InputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Add Contact\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import Axios from \"axios\";\r\nimport React, { Component } from \"react\";\r\nimport { Consumer } from \"../components/context\";\r\nimport InputGroup from \"./InputGroup\";\r\n\r\nexport default class UpdataUser extends Component {\r\n  state = {\r\n    name: \"\",\r\n    email: \"\",\r\n    phone: \"\",\r\n    errors: {},\r\n  };\r\n  componentDidMount = async () => {\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.get(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`\r\n    );\r\n    const user = res.data;\r\n    const { name, email, phone } = user;\r\n    this.setState({ name, email, phone });\r\n  };\r\n\r\n  onChange = (e) => {\r\n    this.setState({ [e.target.name]: e.target.value });\r\n  };\r\n  onSubmit = async (dispatch, e) => {\r\n    e.preventDefault();\r\n    const { name, email, phone } = this.state;\r\n    // chack fields\r\n    if (name === \"\") {\r\n      this.setState({ errors: { name: \"Name Is Required\" } });\r\n      return;\r\n    }\r\n    if (email === \"\") {\r\n      this.setState({ errors: { email: \"Email Is Required\" } });\r\n      return;\r\n    }\r\n    if (phone === \"\") {\r\n      this.setState({ errors: { phone: \"Phone Is Required\" } });\r\n      return;\r\n    }\r\n    const UpdUsers = {\r\n      name,\r\n      email,\r\n      phone,\r\n    };\r\n    const { id } = this.props.match.params;\r\n    const res = await Axios.put(\r\n      `https://jsonplaceholder.typicode.com/users/${id}`,\r\n      UpdUsers\r\n    );\r\n    dispatch({ type: \"UPDATA-USER\", payload: res.data });\r\n\r\n    // clear fields\r\n    this.setState({\r\n      name: \"\",\r\n      email: \"\",\r\n      phone: \"\",\r\n      errors: {},\r\n    });\r\n    this.props.history.push(\"/\");\r\n  };\r\n  render() {\r\n    const { name, email, phone, errors } = this.state;\r\n\r\n    return (\r\n      <Consumer>\r\n        {(value) => {\r\n          const { dispatch } = value;\r\n          return (\r\n            <div className=\"card mb-3\">\r\n              <h2 className=\"card-header text-center\">\r\n                Updata <span className=\"text-danger\">User</span>{\" \"}\r\n              </h2>\r\n              <div className=\"card-body\">\r\n                <form onSubmit={this.onSubmit.bind(this, dispatch)}>\r\n                  <InputGroup\r\n                    label=\"Name\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    placeholder=\"Enter Name...\"\r\n                    value={name}\r\n                    onChange={this.onChange}\r\n                    error={errors.name}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Email\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    type=\"email\"\r\n                    placeholder=\"Enter Email...\"\r\n                    value={email}\r\n                    onChange={this.onChange}\r\n                    error={errors.email}\r\n                  />\r\n                  <InputGroup\r\n                    label=\"Phone\"\r\n                    name=\"phone\"\r\n                    id=\"phone\"\r\n                    placeholder=\"Enter Phone...\"\r\n                    value={phone}\r\n                    onChange={this.onChange}\r\n                    error={errors.phone}\r\n                  />\r\n                  <input\r\n                    type=\"submit\"\r\n                    value=\"Updata User\"\r\n                    className=\"btn btn-block btn-light\"\r\n                  />\r\n                </form>\r\n              </div>\r\n            </div>\r\n          );\r\n        }}\r\n      </Consumer>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function About() {\r\n  return (\r\n    <div className=\"card card-body mb-3\">\r\n      <h1>\r\n        About <span className=\"text-danger\">US</span>\r\n      </h1>\r\n      <p className=\"lead\">\r\n        Lorem ipsum dolor sit amet consectetur, adipisicing elit. Dolore\r\n        sapiente molestias corporis aliquid consectetur beatae amet laboriosam\r\n        praesentium impedit numquam?\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NotFound() {\r\n  return (\r\n    <div className=\"text-center mt-5\">\r\n      <h1>\r\n        Error <span className=\"text-danger\">404</span>\r\n      </h1>\r\n      <p>This page is not found</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\nimport \"./App.css\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Header from \"./components/Header\";\nimport { Provider } from \"./components/context\";\nimport Users from \"./components/usersApi\";\nimport AddContact from \"./components/AddContact\";\nimport UpdataUser from \"./components/UpdataUser\";\nimport About from \"./components/About\";\nimport NotFound from \"./components/NotFound\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Router>\n        <div className=\"App\">\n          <Header brand=\"Contact Manager App\" />\n          <div className=\"container\">\n            <Switch>\n              <Route exact path=\"/\" component={Users} />\n              <Route exact path=\"/about\" component={About} />\n              <Route exact path=\"/user/add\" component={AddContact} />\n              <Route exact path=\"/user/edit/:id\" component={UpdataUser} />\n              <Route component={NotFound} />\n            </Switch>\n          </div>\n        </div>\n      </Router>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}